%function rwsh.before_command {%return $last_command_return}
%function rwsh.after_command {%set last_command_return $?; %newline; %echo $last_command_return; %newline; %if_errno {%echo ERRNO set to $ERRNO; %newline; %unset ERRNO}}
%function rwsh.prompt {%echo \$}
%function rwsh.shutdown {e rwsh is now terminating}
%function rwsh.vars {%internal_vars}
%function # {%nop}
%function \ {%nop}
%else_if %test_equal $2 -c {rwsh.mapped_argfunction &3 {%source /etc/rwshrc-basic; $1$; %exit}}

%else {%echo unexpected command line: &*; %newline; %source /etc/rwshrc-default}
$# rwsh.init is tested by having test_init.sh define #

-10
$

-10
$# argv tests

-10
$%nop

-10
$     %nop

-10
$%nop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20

-10
$%echo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
0
$%newline


0
$%echo  \    1                2       
 1 2
0
$%newline


0
$%which_executable rwsh.mapped_argfunction {%nop}
{%nop}
0
$# rwsh.mismatched_brace

0
$%which_executable rwsh.argfunction {
rwsh.mismatched_brace : command not found ( rwsh.mismatched_brace %which_executable rwsh.argfunction { )

-1
$%which_executable rwsh.argfunction }
rwsh.mismatched_brace : command not found ( rwsh.mismatched_brace %which_executable rwsh.argfunction } )

-1
$# rwsh.multiple_argfunctions

-1
$%which_executable rwsh.argfunction {} {}
rwsh.multiple_argfunctions : command not found ( rwsh.multiple_argfunctions )

-1
$%which_executable rwsh.argfunction {rwsh.argfunction {}}
rwsh.arguments_for_argfunction : command not found ( rwsh.arguments_for_argfunction rwsh.argfunction )

-1
$%which_executable rwsh.argfunction {{{{{{{{{{{}}}}}}}}}}}
{\  {\  {\  {\  {\  {\  {\  {\  {\  {\  {\ }}}}}}}}}}}
0
$

0
$# ability of functions to immitate built-ins

0
$%function f {%function $1 {rwsh.argfunction}}

0
$f w {%which_executable $1 {rwsh.argfunction}}

0
$f e {%echo $*; %newline}

0
$f m {rwsh.argfunction}

0
$w e
%function e {%echo $*; %newline}
0
$w \ {}
%function  {%nop}
0
$e text that doesn't have a prompt appended
text that doesn't have a prompt appended

0
$m {e again}
again

0
$

0
$# arg_script tests

0
$%set A /bin

0
$e 5 4 3 2 1
5 4 3 2 1

0
$e $A $0 @$A
/bin e /bin

0
$e 1 2 $* 3 4
1 2 1 2 $* 3 4 3 4

0
$e $*2 1 2
1 2 1 2

0
$e A $1 1 $$3 $$$3
A A 1 A /bin

0
$e A 1 2 3 4 5 6 7 $$$$$$$$$8
A 1 2 3 4 5 6 7 /bin

0
$e &&A
rwsh.not_soon_enough : command not found ( rwsh.not_soon_enough &&A )

-1
$m {e &&&A}
rwsh.not_soon_enough : command not found ( rwsh.not_soon_enough &&&A )

-1
$e &{e &&A}
rwsh.not_soon_enough : command not found ( rwsh.not_soon_enough &&A )

-1
$e &A
/bin

0
$%if %nop 1 2 3 {e &*}
%nop 1 2 3

0
$%else {}

0
$%if %nop 1 2 3 {e &*0}
%if %nop 1 2 3

0
$%else {}

0
$m {%set A not_bin; e &A &&A $A; m {%set A otherwise; e &A &&A &&&A $A}}
/bin not_bin not_bin
/bin not_bin otherwise otherwise

0
$%set A /bin

0
$m {%set A not_bin; e &{%echo $A} &&{%echo $A} $A; m {%set A otherwise; e &{%echo $A} &&{%echo $A} &&&{%echo $A} $A}}
/bin not_bin not_bin
/bin not_bin otherwise otherwise

0
$%set A /bin

0
$m {%set A not_bin; e &{%echo &A} &&{%echo &A &&A}}
/bin /bin not_bin

0
$m &{%echo $A} {e $1 &1}
not_bin &{%echo $A}

0
$m &{%return 1} {}
rwsh.failed_substitution : command not found ( rwsh.failed_substitution &{%return 1} )

-1
$m {e &{%return 1}}
rwsh.failed_substitution : command not found ( rwsh.failed_substitution &{%return 1} )

-1
$m {e &&{%return 1}; e after}
rwsh.failed_substitution : command not found ( rwsh.failed_substitution &{%return 1} )
after

0
$f rwsh.failed_substitution {e &&{%return 1}}

0
$m {e &&{%return 1}; e after}
rwsh.excessive_nesting : command not found ( rwsh.excessive_nesting rwsh.failed_substitution rwsh.failed_substitution rwsh.failed_substitution rwsh.failed_substitution rwsh.failed_substitution rwsh.mapped_argfunction m )

-1
$f rwsh.failed_substitution

0
$# bad_argfunction_style

0
$e x{e x}
rwsh.bad_argfunction_style : command not found ( rwsh.bad_argfunction_style x{e x} )

-1
$e @//usr
/usr

0
$# rwsh.selection_not_found

0
$e @/*is*
rwsh.selection_not_found : command not found ( rwsh.selection_not_found /*is* /*is* )


0
ERRNO set to ARGS
$e @/bin
/bin

0
$e @/usr/*bin
/usr/bin /usr/sbin

0
$e @/usr/lib*
/usr/lib /usr/libexec

0
$e @/usr/s*e
/usr/share /usr/standalone

0
$e @/usr/*d*
/usr/include /usr/standalone

0
$%set FIGNORE include

0
$e @/usr/*d*
/usr/standalone

0
$e @/usr/*l*i*b*x*e*
/usr/libexec

0
$%return &{%return 0}

-1
ERRNO set to NAN
$%return &{e 0}

-1
ERRNO set to NAN
$%return &{%echo 0}

0
$e nevermore &{/bin/echo quoth the raven} 
nevermore quoth the raven


0
$%set A one two three four five

0
$m $A {e $# $*}
2 one two three four five

0
$m $A$ {e $# $*}
6 one two three four five

0
$%unset A

0
$

0
$# file redirection (but don't overwrite files that exist)

0
$# %for_each_line

0
$%if %ls dummy_file {%exit}

0
$%else {}

0
$/bin/cat <dummy_file
rwsh.file_open_failure dummy_file : command not found ( rwsh.file_open_failure dummy_file /bin/cat )

-1
$%for_each_line <dummy_file {e line of $# ( $* )}
rwsh.file_open_failure dummy_file : command not found ( rwsh.file_open_failure dummy_file %for_each_line )

-1
$m {e hi >dummy_file >another}
rwsh.double_redirection : command not found ( rwsh.double_redirection >dummy_file >another )

-1
$m {e hi >dummy_file}

0
$/bin/cat dummy_file
hi

0
$%if %return 0 {>dummy_file /bin/echo there}

0
$%else

0
$/bin/cat dummy_file
there

0
$m {m >dummy_file {e line 1; e line 2 longer; %newline; e ending}}

0
$/bin/cat <dummy_file
line 1
line 2 longer

ending

0
$%for_each_line x {}

-1
ERRNO set to ARGS
$%for_each_line <dummy_file

-1
ERRNO set to ARGFUNCTION
$%for_each_line <dummy_file <another {}
rwsh.double_redirection : command not found ( rwsh.double_redirection <dummy_file <another )

-1
$%for_each_line <dummy_file {e line of $# ( $* )}
line of 3 ( line 1 )
line of 4 ( line 2 longer )
line of 1 ( )
line of 2 ( ending )

0
$/bin/rm dummy_file

0
$

0
$# soon level promotion

0
$%global A 0

0
$%set MAX_NESTING 44

0
$f x {%var_add A 1; m {%var_add A 1; m {%var_add A 1; m {%var_add A 1; m {%var_add A 1; m {rwsh.argfunction}}}}}}

0
$x {e &A &&A $A}
0 5 5

0
$%set A 0

0
$x {x {x {x {e &A &&A &&&A &&&&A &&&&&A $A}}}}
0 5 10 15 20 20

0
$%set A 0

0
$x {e &{%echo &A $A} &&{%echo &A &&A $A} $A}
0 0 0 5 5 5

0
$%set A 0

0
$x {x {x {x {e &{%echo &A $A} &&{%echo &A &&A $A} &&&{%echo &A &&A &&&A $A} &&&&{%echo &A &&A &&&A &&&&A $A} &&&&&{%echo &A &&A &&&A &&&&A &&&&&A $A} $A}}}}
0 0 0 5 5 0 5 10 10 0 5 10 15 15 0 5 10 15 20 20 20

0
$f x

0
$%set MAX_NESTING 5

0
$%unset A

0
$

0
$# builtin tests

0
$# %cd

0
$%cd

-1
ERRNO set to ARGS
$%cd /bin /

-1
ERRNO set to ARGS
$%cd /bin

0
$/bin/pwd
/bin

0
$

0
$# %echo

0
$%echo

-1
ERRNO set to ARGS
$%echo these are fixed strings
these are fixed strings
0
$

0
$# %error_unit

0
$%error_unit

-1
ERRNO set to ARGFUNCTION
$%error_unit {e $*0}
rwsh.mapped_argfunction

0
$%error_unit x y z {e $*0; %global ERRNO X}
rwsh.mapped_argfunction x y z

0
ERRNO set to X
$m {%global ERRNO X; %error_unit {%var_exists ERRNO}} 

1
ERRNO set to X
$m {%global ERRNO X; %error_unit {%var_exists ERRNO; %global ERRNO Y}} 

0
ERRNO set to X Y
$

0
$# %exec %fork

0
$%fork

-1
ERRNO set to ARGS
$%fork e text
text

0
$%fork %return 1

256
$%exec

-1
ERRNO set to ARGS
$%fork m {%exec /bin/echo something; /bin/echo else}
something

0
$

0
$# %for

0
$%for {e no arguments $1}

-1
ERRNO set to ARGS
$%for 1 {e one argument $1}
one argument 1

0
$%for 1 2 3 4 {e four arguments $1}
four arguments 1
four arguments 2
four arguments 3
four arguments 4

0
$

0
$# %function

0
$%function

-1
ERRNO set to ARGS
$%function /bin/echo {%echo $*; %newline}

1
$%function %function {%nop}

2
$%function rwsh.escaped_argfunction {%nop}

3
$%function a {%nop}

0
$%which_executable a
%function a {%nop}
0
$a 1 2 3

0
$%function a

0
$%which_executable a

1
$%global A \

0
$%function a {e 9 $A $1 @//usr}

0
$%which_executable a
%function a {e 9 $A $1 @//usr}
0
$a \
9   /usr

0
$a 1
9  1 /usr

0
$a 1 2
9  1 /usr

0
$%function a {e $*5 $* $*0}

0
$a
a

0
$a 1
1 a 1

0
$a 1 2
1 2 a 1 2

0
$f g {%function $1 {%function $1 {rwsh.argfunction}}}

0
$g a {e 3 2 1}

0
$w a
%function a {%function $1 {e 3 2 1}}
0
$a b

0
$b
3 2 1

0
$# a function redefining itself doesn't seg fault

0
$f g {e hi; f g {e there}; f h {e nothing here}; g}

0
$g
hi
there

0
$

0
$# %global %unset %var_exists 

0
$%global

-1
ERRNO set to ARGS
$%global x y z

-1
ERRNO set to ARGS
$%unset

-1
ERRNO set to ARGS
$%unset x y

-1
ERRNO set to ARGS
$%var_exists

-1
ERRNO set to ARGS
$%var_exists x y

-1
ERRNO set to ARGS
$%global 100 nihilism

2
$%unset #

3
$%unset *

3
$%unset 1

3
$%unset MAX_NESTING

2
$%var_exists #

0
$%var_exists *

0
$%var_exists 0

0
$%var_exists 2

1
$%var_exists x

1
$%unset x

1
$%global x nihilism

0
$%var_exists x

0
$e $x
nihilism

0
$%global x nihilism

1
$%unset x

0
$%var_exists x

1
$%return 0

0
$

0
$# %if %else_if %else_if_not %else

0
$%if

-1
ERRNO set to ARGS
$%else_if

-1
ERRNO set to ARGS
$%else_if_not

-1
ERRNO set to ARGS
$%else

-1
ERRNO set to ELSE_WITHOUT_IF
$%if %return 0 {e if true; %return 1}
if true

1
$%else {e else true; %return 3}

1
$%if %return 1 {e if false; %return 4}

0
$%else {e else false; %return 5}
else false

5
$%else_if %return 0 {e not this one; %return 6}

-1
ERRNO set to ELSE_WITHOUT_IF
$%else_if_not %return 1 {e not this one; %return 7}

-1
ERRNO set to ELSE_WITHOUT_IF
$%if %return 1 {e nor this; %return 8}

0
$%else_if %return 1 {e nor this; %return 9}

0
$%else_if %return 0 {e but this; %return 10}
but this

10
$%else_if %return 0 {e this should be skipped; %return 11}

10
$%else_if %return 1 {e and certainly this; %return 12}

10
$%else {e nor this; %return 13}

10
$%if %return 1 {e nor this; %return 14}

0
$%else_if_not %return 0 {e nor this; %return 15}

0
$%else_if_not %return 1 {e but this; %return 16}
but this

16
$%else_if_not %return 1 {e this should be skipped; %return 17}

16
$%else_if_not %return 0 {e and certainly this; %return 18}

16
$%else {e nor this; %return 19}

16
$%if %return 0 {%if %return 1 {not to be printed; %return 20}; %else_if %return 0 {e nested else_if; %return 21}}
nested else_if

-1
ERRNO set to BAD_IF_NEST
$%else {e else_if failed to appropriately set IF_TEST on exit; %return 22}

-1
ERRNO set to ELSE_WITHOUT_IF
$%if %return 0 {%else_if %return 0 {e nested syntax; %return 23}}

-1
ERRNO set to ELSE_WITHOUT_IF
$%else {e already tested; %return 24}

-1
$

-1
$# %if_errno %if_errno_is %append_to_errno

-1
$rwsh.mapped_argfunction {%if_errno {e no error}; %append_to_errno x; %if_errno {e invented error $ERRNO}; %if_errno %return 0 {e doubled error $ERRNO}}
invented error x
doubled error x ARGS

0
ERRNO set to x ARGS
$rwsh.mapped_argfunction {%if_errno_is x {e no error}; %if_errno_is {e invocation error $ERRNO}; %unset ERRNO; %append_to_errno x; %if_errno_is y {e invented error $ERRNO matches y}; %if_errno_is x {e invented error $ERRNO matches x}; %if_errno_is {e doubled error $ERRNO}}
invocation error ARGS
invented error x matches x
doubled error x ARGS

0
ERRNO set to x ARGS
$

0
$# %internal_errors %internal_features %internal_vars

0
$%internal_errors 1

-1
ERRNO set to ARGS
$%internal_features 1

-1
ERRNO set to ARGS
$%internal_vars 1

-1
ERRNO set to ARGS
$%internal_errors
rwsh.arguments_for_argfunction rwsh.bad_argfunction_style rwsh.binary_not_found rwsh.double_redirection rwsh.excessive_nesting rwsh.executable_not_found rwsh.failed_substitution rwsh.mismatched_brace rwsh.multiple_argfunctions rwsh.not_soon_enough rwsh.init rwsh.selection_not_found rwsh.sighup rwsh.sigint rwsh.sigquit rwsh.sigpipe rwsh.sigterm rwsh.sigtstp rwsh.siginfo rwsh.sigusr1 rwsh.sigusr2 rwsh.undefined_variable rwsh.unreadable_dir
0
$%internal_features
rwsh.after_command rwsh.before_command rwsh.prompt rwsh.raw_command rwsh.run_logic rwsh.shutdown rwsh.vars
0
$%internal_vars
CWD ERRNO FIGNORE IF_TEST MAX_NESTING
0
$

0
$# %is_default_input %is_default_output %is_default_error

0
$%is_default_input 1

-1
ERRNO set to ARGS
$m {%is_default_input <dummy_file}

1
$m {%is_default_input}

0
$%is_default_output 1

-1
ERRNO set to ARGS
$e &{%is_default_output; %echo $?}
1

0
$m {%is_default_output >dummy_file}

1
$m {%is_default_output}

0
$%is_default_error 1

-1
ERRNO set to ARGS
$m {%is_default_error}

0
$

0
$# %ls

0
$%ls

-1
ERRNO set to ARGS
$%ls /bin /usr/
/bin
/usr/

0
$

0
$# %newline

0
$%newline 1

-1
ERRNO set to ARGS
$%newline


0
$

0
$# %nop

0
$%nop

0
$%nop 1 2 3 4 5

0
$

0
$# %return

0
$%return

-1
ERRNO set to ARGS
$%return 1 1

-1
ERRNO set to ARGS
$%return 0

0
$%return 1

1
$%return \

-1
ERRNO set to NAN
$%return O

-1
ERRNO set to NAN
$%return 1E2

-1
ERRNO set to NAN
$%return 2147483647

2147483647
$%return 2147483649

-1
ERRNO set to RANGE
$%return -2147483649

-1
ERRNO set to RANGE
$

-1
$# %selection_set

-1
$%selection_set A

-1
ERRNO set to ARGS
$%selection_set A //usr

0
$e $A
/usr

0
$%selection_set A /

0
$e $A
/usr/*

0
$%selection_set A local/include

0
$e $A
/usr/local/include

0
$%selection_set A ..

0
$e $A
/usr

0
$%selection_set A \

0
$e $A
/usr

0
$%selection_set A /local/../../bin

0
$e $A
/bin

0
$

0
$# %set

0
$%set A

-1
ERRNO set to ARGS
$%set B x
rwsh.undefined_variable : command not found ( rwsh.undefined_variable B %set )

-1
$%set IF_TEST x

2
$e $A
/bin

0
$%set A x

0
$e $A
x

0
$

0
$# %source

0
$%source

-1
ERRNO set to ARGS
$%source /*fu*bar*

-1
ERRNO set to NOENT
$# if you actually have that file, something is seriously wrong

-1
$%source /etc/hostname

-1
ERRNO set to NOENT
$# %source is tested by having test_init.sh define #

-1
$w rwsh.init
%function rwsh.init {%set MAX_NESTING 4; %source /etc/rwshrc $*}
0
$

0
$# %stepwise

0
$f wrapper {%append_to_errno x; a $* two; a $* three}

0
$f a {e $* one; e $* two; e $* three}

0
$f d {e $*; %stepwise $* {d $*}}

0
$%stepwise {e $*}

-1
ERRNO set to ARGS
$%stepwise wrapper 1 2

-1
ERRNO set to ARGFUNCTION
$%stepwise stepwise {e $*}

1
$%stepwise %stepwise {e $*}

2
$%stepwise wrapper 1 2 {e $*}
%append_to_errno x
a 1 2 two
a 1 2 three

0
$f wrapper {a $* one; a $* two; a $* three}

0
$wrapper 1 2
1 2 one one
1 2 one two
1 2 one three
1 2 two one
1 2 two two
1 2 two three
1 2 three one
1 2 three two
1 2 three three

0
$%stepwise wrapper 1 2 {d $*}
a 1 2 one
rwsh.excessive_nesting : command not found ( rwsh.excessive_nesting rwsh.mapped_argfunction a %stepwise d rwsh.mapped_argfunction wrapper %stepwise )

-1
$%stepwise wrapper 1 2 {e $*}
a 1 2 one
a 1 2 two
a 1 2 three

0
$%set A $MAX_NESTING

0
$%set MAX_NESTING 12

0
$%stepwise wrapper 1 2 {d $*}
a 1 2 one
e 1 2 one one
%echo 1 2 one one
%newline
e 1 2 one two
%echo 1 2 one two
%newline
e 1 2 one three
%echo 1 2 one three
%newline
a 1 2 two
e 1 2 two one
%echo 1 2 two one
%newline
e 1 2 two two
%echo 1 2 two two
%newline
e 1 2 two three
%echo 1 2 two three
%newline
a 1 2 three
e 1 2 three one
%echo 1 2 three one
%newline
e 1 2 three two
%echo 1 2 three two
%newline
e 1 2 three three
%echo 1 2 three three
%newline

2
$%set MAX_NESTING $A 

0
$

0
$# %test_equal %test_not_equal %test_not_empty

0
$%test_equal x

-1
ERRNO set to ARGS
$%test_equal x x x

-1
ERRNO set to ARGS
$%test_not_equal x 

-1
ERRNO set to ARGS
$%test_not_equal x x x

-1
ERRNO set to ARGS
$%test_not_empty 

-1
ERRNO set to ARGS
$%test_not_empty x x

-1
ERRNO set to ARGS
$%test_equal x y

1
$%test_equal x x

0
$%test_not_equal x y

0
$%test_not_equal x x

1
$%test_not_empty \

1
$%test_not_empty x

0
$

0
$# %which_executable %which_execution_count %which_last_execution_time 

0
$# %which_total_execution_time %which_test %which_return

0
$%which_test

-1
ERRNO set to ARGS
$%which_test j

1
$%which_test #

0
$%which_test rwsh.mapped_argfunction

1
$%which_test rwsh.mapped_argfunction {rwsh.argfunction}

0
$%which_executable

-1
ERRNO set to ARGS
$%which_executable j

1
$%which_executable #
%function # {%nop}
0
$%which_executable rwsh.mapped_argfunction {%nop 1 \ \$ \@ $A $$A $0 $$$1 $# $* $*2 $A$ $$*$$ $$$*12$ &&A &&0 &&* &&*3 &&$A$ &&*$$ &&*6$$$ @a @$a @$1 @$* @$*2 >dummy_file}
{%nop 1 \  \$ \@ $A $$A $0 $$$1 $# $* $*2 $A$ $$*$$ $$$*12$ &A &0 &* &*3 &$A$ &*$$ &*6$$$ @a @$a @$1 @$*1 @$*2 >dummy_file}
0
$%which_executable rwsh.mapped_argfunction

1
$%which_executable rwsh.mapped_argfunction {rwsh.argfunction}
{rwsh.argfunction}
0
$%which_execution_count

-1
ERRNO set to ARGS
$%which_execution_count j

1
$%which_execution_count #
37
0
$%which_last_execution_time

-1
ERRNO set to ARGS
$# %which_last_execution_time j

-1
$# %which_last_execution_time #

-1
$%which_total_execution_time

-1
ERRNO set to ARGS
$# %which_total_execution_time j

-1
$# %which_total_execution_time #

-1
$%waiting_for_shell j

-1
ERRNO set to ARGS
$# %waiting_for_shell

-1
$%waiting_for_user j

-1
ERRNO set to ARGS
$# %waiting_for_user

-1
$%which_return

-1
ERRNO set to ARGS
$%which_return rwsh.mapped_argfunction

2
$%which_return rwsh.mapped_argfunction {rwsh.argfunction}

2
$%which_return %which_return
2
0
$%which_return j

1
$%which_return #
-1
0
$

0
$# %which_path

0
$%which_path false

-1
ERRNO set to ARGS
$%which_path false \

1
$%which_path flse /bin:/usr/bin

1
$%which_path false /bin:/usr/bin
/usr/bin/false
0
$

0
$# %while

0
$%function tf {%test_not_equal $A $N}

0
$%set A 0

0
$%set N 4

0
$%while {e ARGS}

-1
ERRNO set to ARGS
$%while tf {e printed; %set A 4}
printed

0
$%while tf {e skipped}

-1
$%set A 0

0
$%while tf {e in %while argfunction $A; %var_add A 1}
in %while argfunction 0
in %while argfunction 1
in %while argfunction 2
in %while argfunction 3

0
$%set A 0

0
$%while tf {%if %return $A {%set A 1}; %else {%function tf {%return 1}}; e in overwriting argfunction;}
in overwriting argfunction
in overwriting argfunction

0
$

0
$# %var_add

0
$%var_add

-1
ERRNO set to ARGS
$%var_add A 1 2

-1
ERRNO set to ARGS
$%var_add B 1
rwsh.undefined_variable : command not found ( rwsh.undefined_variable B %var_add )

-1
$%set A A

0
$%var_add A 2 

-1
ERRNO set to VAR_NAN
$%set A 3000000000

0
$%var_add A 2 

-1
ERRNO set to VAR_RANGE
$%set A -2147483648

0
$%var_add A A

-1
ERRNO set to CONST_NAN
$%var_add A 3000000000

-1
ERRNO set to CONST_RANGE
$%var_add A -2147483648

-1
ERRNO set to SUM_RANGE
$%var_add A 2147483647

0
$%var_add A 2147483647

0
$e $A
2147483646

0
$%var_add A 2147483647

-1
ERRNO set to SUM_RANGE
$%var_add A -2147483648

0
$e $A
-2

0
$%var_add A \

-1
ERRNO set to CONST_NAN
$e $A
-2

0
$

0
$# %var_divide

0
$%var_divide A

-1
ERRNO set to ARGS
$%var_divide A 1 2

-1
ERRNO set to ARGS
$%var_divide B 1
rwsh.undefined_variable : command not found ( rwsh.undefined_variable B %var_divide )

-1
$%set A A

0
$%var_divide A 2 

-1
ERRNO set to VAR_NAN
$%set A 3000000000

0
$%var_divide A 2 

-1
ERRNO set to VAR_RANGE
$%set A 8

0
$%var_divide A A

-1
ERRNO set to CONST_NAN
$%var_divide A 3000000000

-1
ERRNO set to CONST_RANGE
$%var_divide A 0 

-1
ERRNO set to DIVIDE_ZERO
$%var_divide A 2 

0
$e $A
4

0
$

0
$# %version %version_available %version_compatible

0
$%version 1.0

-1
ERRNO set to ARGS
$%version_available 1.0

-1
ERRNO set to ARGS
$%version_compatible

-1
ERRNO set to ARGS
$%version_compatible 1.0 1.0

-1
ERRNO set to ARGS
$%version
0.2.1+
0
$%version_available
0.2.1+
0
$%version_compatible 1.0

1
$%version_compatible 0.2.1+

0
$

0
$# binary test implicitly tests Old_argv_t

0
$/bn/echo 1 2 3
rwsh.binary_not_found : command not found ( rwsh.binary_not_found /bn/echo )

65280
$/bin/echo 1 2 3
1 2 3

0
$

0
$# internal functions 

0
$# rwsh.after_command rwsh.raw_command rwsh.prompt

0
$# all of these are used as part of the test itself. If this changes, then the 

0
$# following tests will fail.

0
$w rwsh.after_command
%function rwsh.after_command {%set last_command_return $?; %newline; %echo $last_command_return; %newline; %if_errno {%echo ERRNO set to $ERRNO; %newline; %unset ERRNO}}
0
$w rwsh.prompt
%function rwsh.prompt {%echo \$}
0
$w rwsh.raw_command
%function rwsh.raw_command {%echo $1; %newline}
0
$

0
$# rwsh.arguments_for_argfunction rwsh.before_command rwsh.binary_not_found

0
$w x {rwsh.escaped_argfunction me}
rwsh.arguments_for_argfunction : command not found ( rwsh.arguments_for_argfunction rwsh.escaped_argfunction )

-1
$f rwsh.before_command {%echo $*0; %newline}

0
$/bn
rwsh.before_command /bn
rwsh.binary_not_found : command not found ( rwsh.binary_not_found /bn )

65280
$f rwsh.before_command
rwsh.before_command f rwsh.before_command

0
$

0
$# rwsh.autofunction

0
$w z

1
$f rwsh.autofunction {e $*0}

0
$z 1 2 3
rwsh.autofunction z 1 2 3
z : command not found ( z 1 2 3 )

-1
$w z

1
$f rwsh.autofunction {y $*0}

0
$z 1 2 3
y : command not found ( y rwsh.autofunction z 1 2 3 )
z : command not found ( z 1 2 3 )

-1
$w z

1
$f rwsh.autofunction {f $1 {e $*}}

0
$z 1 2 3
1 2 3

0
$w z
%function z {e $*}
0
$f rwsh.autofunction

0
$

0
$# rwsh.double_redirection

0
$# m {e hi #>dummy_file >dummy_file}

0
$# m {e hi >dummy_file}

0
$# m {e &{e hi #>dummy_file}}

0
$

0
$# rwsh.executable_not_found

0
$f rwsh.executable_not_found

0
$w rwsh.executable_not_found

1
$w x

1
$x
x : command not found ( x )

-1
$w rwsh.executable_not_found
%function rwsh.executable_not_found {%echo $1 : command not found ( $* ); %newline; %return -1}
0
$

0
$# rwsh.mapped_argfunction rwsh.unescaped_argfunction rwsh.argfunction

0
$# rwsh.escaped_argfunction

0
$rwsh.mapped_argfunction 1 2 3 {e a $* a}
a 1 2 3 a

0
$rwsh.mapped_argfunction
rwsh.mapped_argfunction : command not found ( rwsh.mapped_argfunction )

-1
$f g {w rwsh.argfunction {rwsh.unescaped_argfunction}; w rwsh.argfunction {rwsh.argfunction}; w rwsh.argfunction {rwsh.escaped_argfunction}}

0
$g {}
{w rwsh.argfunction {\ }; w rwsh.argfunction {rwsh.argfunction}; w rwsh.argfunction {rwsh.escaped_argfunction}}{\ }{rwsh.argfunction}
0
$

0
$# rwsh.excessive_nesting

0
$f g {h}

0
$f h {g}

0
$g
rwsh.excessive_nesting : command not found ( rwsh.excessive_nesting g h g h g h g )

-1
$f rwsh.excessive_nesting {h}

0
$g
signal handler itself triggered signal
g h g h g h rwsh.excessive_nesting
original call stack:
g h g h g h g

-1
$

0
$# rwsh.run_logic

0
$f rwsh.run_logic {%if %return $1; %else_if $*2; %else}

0
$0 e don't print

0
$1 e do print
do print

0
$1 f rwsh.run_logic

0
$1 e executable not found
1 : command not found ( 1 e executable not found )

-1
$

0
$# rwsh.undefined_variable

0
$e $WRONG $WWRONG
rwsh.undefined_variable : command not found ( rwsh.undefined_variable WRONG )
$e &WWRONG
rwsh.undefined_variable : command not found ( rwsh.undefined_variable WWRONG )
$

0
$# rwsh.vars

0
$rwsh.vars
CWD ERRNO FIGNORE IF_TEST MAX_NESTING
0
$

0
$# check for extraneous variables

0
$/usr/bin/printenv
?=0
A=4
CWD=/bin
FIGNORE=include
MAX_NESTING=5
N=4
last_command_return=0

0
$

0
$# %importenv_preserve %importenv_overwrite

0
$%global TERM modified

0
$%importenv_preserve

0
$e $TERM
modified

0
$e $TERM_PROGRAM
Apple_Terminal

0
$%unset TERM_PROGRAM

0
$%importenv_overwrite

0
$e $TERM
xterm-color

0
$e $TERM_PROGRAM
Apple_Terminal

0
$

0
$# exiting rwsh.shutdown

0
$%exit now

-1
ERRNO set to ARGS
$%exit

0
rwsh is now terminating
