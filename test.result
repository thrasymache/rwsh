%function rwsh.before_command {%return $last_command_return}
%function rwsh.after_command {%set last_command_return $?; %echo $last_command_return; %newline; %if_errno {%echo ERRNO set to $ERRNO; %newline; %set ERRNO \ }}
%function rwsh.prompt {%echo \$}
%function rwsh.vars {%internal_vars}
%function # {%nop}
%function \ {%nop}
$# rwsh.init %source are tested by having test_init.sh define #
-10
$
-10
$# argv tests
-10
$%nop
-10
$     %nop
-10
$%nop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
-10
$%echo 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 200
$%newline

0
$%echo  \    1                2       
 1 20
$%newline

0
$%which_executable rwsh.mapped_argfunction {%nop}
{%nop}
0
$# rwsh.mismatched_brace
0
$%which_executable rwsh.argfunction {
rwsh.mismatched_brace : command not found ( rwsh.mismatched_brace %which_executable rwsh.argfunction { )
-1
$%which_executable rwsh.argfunction }
rwsh.mismatched_brace : command not found ( rwsh.mismatched_brace %which_executable rwsh.argfunction } )
-1
$# rwsh.multiple_argfunctions
-1
$%which_executable rwsh.argfunction {} {}
rwsh.multiple_argfunctions : command not found ( rwsh.multiple_argfunctions )
-1
$%which_executable rwsh.argfunction {rwsh.argfunction {}}
rwsh.arguments_for_argfunction : command not found ( rwsh.arguments_for_argfunction rwsh.argfunction )
-1
$%which_executable rwsh.argfunction {{{{{{{{{{{}}}}}}}}}}}
{\  {\  {\  {\  {\  {\  {\  {\  {\  {\  {\ }}}}}}}}}}}
0
$
0
$# ability of functions to immitate built-ins
0
$%function f {%function $1 {rwsh.argfunction}}
0
$f w {%which_executable $1 {rwsh.argfunction}}
0
$f e {%echo $*; %newline}
0
$w e
%function e {%echo $*; %newline}
0
$w {}
%function  {%nop}
0
$e text that doesn't have a prompt appended
text that doesn't have a prompt appended
0
$
0
$# builtin tests
0
$# %cd
0
$%cd /bin
0
$/bin/pwd
/bin
0
$
0
$# %echo
0
$%echo these are fixed strings
these are fixed strings0
$
0
$# %for
0
$%for {e no arguments $1}
-1
ERRNO set to ARGS
$%for 1 {e one argument $1}
one argument 1
0
$%for 1 2 3 4 {e four arguments $1}
four arguments 1
four arguments 2
four arguments 3
four arguments 4
0
$
0
$# %function
0
$%function a {%nop}
0
$%which_executable a
%function a {%nop}
0
$a 1 2 3
0
$%function a
0
$%which_executable a
1
$%function a {e 9 $A $1 @//usr}
0
$%which_executable a
%function a {e 9 $A $1 @//usr}
0
$a
9   /usr
0
$a 1
9  1 /usr
0
$a 1 2
9  1 /usr
0
$%function a {e $*5 $* $*0}
0
$a
a
0
$a 1
1 a 1
0
$a 1 2
1 2 a 1 2
0
$f g {%function $1 {%function $1 {rwsh.argfunction}}}
0
$g a {e 3 2 1}
0
$w a
%function a {%function $1 {e 3 2 1}}
0
$a b
0
$b
3 2 1
0
$# a function redefining itself doesn't seg fault
0
$f g {e hi; f g {e there}; f h {e nothing here}; g}
0
$g
hi
there
0
$
0
$# %if %else_if %else
0
$%if %return 0 {e if true; %return 1}
if true
1
$%else {e else true; %return 3}
1
$%if %return 1 {e if false; %return 4}
0
$%else {e else false; %return 5}
else false
5
$%else_if %return 0 {e not this one; %return 6}
-1
ERRNO set to ELSE_WITHOUT_IF
$%if %return 1 {e nor this; %return 7}
0
$%else_if %return 0 {e but this; %return 8}
but this
8
$%else_if %return 0 {e this should be skipped; %return 9}
8
$%else_if %return 1 {e and certainly this; %return 10}
8
$%else {e nor this; %return 11}
8
$%if %return 0 {%if %return 1 {not to be printed; %return 11}; %else_if %return 0 {e nested else_if; %return 12}}
nested else_if
-1
ERRNO set to BAD_IF_NEST
$%else {e else_if failed to appropriately set IF_TEST on exit; %return 13}
-1
$%if %return 0 {%else_if %return 0 {e nested syntax; %return 14}}
-1
ERRNO set to ELSE_WITHOUT_IF
$%else {e already tested; %return 15}
-1
$
-1
$# %if_errno
-1
$rwsh.mapped_argfunction {%if_errno {e no error}; %set ERRNO x; %if_errno {e invented error}}
invented error
0
ERRNO set to x
$
0
$# %internal_errors %internal_features %internal_vars
0
$%internal_errors
rwsh.arguments_for_argfunction rwsh.binary_not_found rwsh.executable_not_found rwsh.excessive_nesting rwsh.mismatched_brace rwsh.multiple_argfunctions rwsh.init rwsh.selection_not_found rwsh.sighup rwsh.sigint rwsh.sigquit rwsh.sigpipe rwsh.sigterm rwsh.sigstp rwsh.sigcont rwsh.siginfo rwsh.sigusr1 rwsh.sigusr2 rwsh.unreadable_dir0
$%internal_features
rwsh.after_command rwsh.before_command rwsh.prompt rwsh.raw_command rwsh.run_logic rwsh.shutdown rwsh.vars0
$%internal_vars
CWD ERRNO FIGNORE IF_TEST0
$
0
$# %ls
0
$%ls /bin /usr/
/bin
/usr/
0
$
0
$# %nop
0
$%nop
0
$%nop 1 2 3 4 5
0
$
0
$# %printenv %importenv_preserve %set
0
$%printenv
?=0
CWD=/bin
MAX_NESTING=4
last_command_return=0
rc=/usr/share/rwsh/test_init.sh
0
$%printenv SHELL

0
$%importenv_preserve
0
$%printenv SHELL
/bin/bash
0
$%printenv A

0
$%set A 1
0
$%printenv A
1
0
$
0
$# %return
0
$%return 0
0
$%return 1
1
$%return 1E2
-1
ERRNO set to NAN
$
-1
$# %selection_set
-1
$%selection_set A //usr
0
$e $A
/usr
0
$%selection_set A /
0
$e $A
/usr/*
0
$%selection_set A local/include
0
$e $A
/usr/local/include
0
$%selection_set A ..
0
$e $A
/usr
0
$%selection_set A \
0
$e $A
/usr
0
$%selection_set A /local/../../bin
0
$e $A
/bin
0
$
0
$# %stepwise
0
$%stepwise stepwise {e $*}
1
$%stepwise %stepwise {e $*}
2
$%stepwise e stepping through echo
-1
ERRNO set to ARGFUNCTION
$%stepwise e stepping through echo {e $*}
%echo stepping through echo
%newline
0
$%stepwise rwsh.after_command %stepwise e stepping through echo {e $*}
%set last_command_return 0
%echo 0
%newline
%if_errno
0
$
0
$# %test_equal %test_not_empty
0
$%test_equal x y
1
$%test_equal x x
0
$%test_not_empty \
1
$%test_not_empty x
0
$
0
$# %which_executable %which_test %which_return
0
$%which_test j
1
$%which_executable j
1
$%which_return %which_executable
1
0
$%which_test #
0
$%which_executable #
%function # {%nop}
0
$%which_return %which_executable
0
0
$%which_return %which2
1
$%which_executable rwsh.mapped_argfunction {%nop 1 \ \$ \@ $A $0 $# $* $*2 @a @$a @$1 @$* @$*2}
{%nop 1 \  \$ \@ $A $0 $# $* $*2 @a @$a @$1 @$*1 @$*2}
0
$%which_test rwsh.mapped_argfunction
1
$%which_executable rwsh.mapped_argfunction
1
$%which_test rwsh.mapped_argfunction {rwsh.argfunction}
0
$%which_executable rwsh.mapped_argfunction {rwsh.argfunction}
{rwsh.argfunction}
0
$
0
$# %while
0
$%function tf {%return $X}
0
$%set X 1
0
$%while tf {e skipped}
-1
$%set X 0
0
$%while tf {e printed; %set X 1}
printed
0
$%set X 0
0
$%set Y 0
0
$%while tf {%if %return $Y {%set Y 1}; %else {%set X 1}; e in %while argfunction}
in %while argfunction
in %while argfunction
0
$
0
$# %version %version_available %version_compatible
0
$%version
0.2+0
$%version_available
0.2+0
$%version_compatible 1.0
1
$
1
$# binary test implicitly tests Old_argv_t
1
$/bin/echo 1 2 3
1 2 3
0
$/bn/echo 1 2 3
rwsh.binary_not_found : command not found ( rwsh.binary_not_found /bn/echo )
65280
$
65280
$# arg_script tests
65280
$e 5 4 3 2 1
5 4 3 2 1
0
$e $A $0 @$A
/bin e /bin
0
$e 1 2 $* 3 4
1 2 1 2 $* 3 4 3 4
0
$e $*2 1 2
1 2 1 2
0
$e @//usr
/usr
0
$# rwsh.selection_not_found
0
$e @/*is*
rwsh.selection_not_found : command not found ( rwsh.selection_not_found /*is* /*is* )

0
ERRNO set to ARGS
$e @/bin
/bin
0
$e @/usr/*bin
/usr/bin /usr/sbin
0
$e @/usr/lib*
/usr/lib /usr/libexec
0
$e @/usr/s*e
/usr/share /usr/standalone
0
$e @/usr/*d*
/usr/include /usr/standalone
0
$%set FIGNORE include
0
$e @/usr/*d*
/usr/standalone
0
$e @/usr/*l*i*b*x*e*
/usr/libexec
0
$
0
$# internal functions 
0
$# rwsh.after_command rwsh.raw_command rwsh.prompt
0
$# all of these are used as part of the test itself. If this changes, then the 
0
$# following tests will fail.
0
$w rwsh.after_command
%function rwsh.after_command {%set last_command_return $?; %echo $last_command_return; %newline; %if_errno {%echo ERRNO set to $ERRNO; %newline; %set ERRNO \ }}
0
$w rwsh.prompt
%function rwsh.prompt {%echo \$}
0
$w rwsh.raw_command
%function rwsh.raw_command {%echo $1; %newline}
0
$
0
$# rwsh.arguments_for_argfunction rwsh.before_command rwsh.binary_not_found
0
$w x {rwsh.escaped_argfunction me}
rwsh.arguments_for_argfunction : command not found ( rwsh.arguments_for_argfunction rwsh.escaped_argfunction )
-1
$f rwsh.before_command {%echo $*0; %newline}
0
$/bn
rwsh.before_command /bn
rwsh.binary_not_found : command not found ( rwsh.binary_not_found /bn )
65280
$f rwsh.before_command
rwsh.before_command f rwsh.before_command
0
$
0
$# rwsh.autofunction %autofunction %which_path
0
$f rwsh.autofunction {%autofunction $1 \$*}
0
$w false
1
$%which_path false
/usr/bin/false
0
$false
256
$w false
%function false {/usr/bin/false $*}
0
$
0
$# rwsh.executable_not_found
0
$f rwsh.executable_not_found
0
$w rwsh.executable_not_found
1
$w x
1
$x
x : command not found ( x )
-1
$w rwsh.executable_not_found
%function rwsh.executable_not_found {%echo $1 : command not found ( $* ); %newline; %return -1}
0
$
0
$# rwsh.mapped_argfunction rwsh.unescaped_argfunction rwsh.argfunction
0
$# rwsh.escaped_argfunction
0
$rwsh.mapped_argfunction 1 2 3 {e a $* a}
a 1 2 3 a
0
$rwsh.mapped_argfunction
rwsh.mapped_argfunction : command not found ( rwsh.mapped_argfunction )
-1
$f g {w rwsh.argfunction {rwsh.unescaped_argfunction}; w rwsh.argfunction {rwsh.argfunction}; w rwsh.argfunction {rwsh.escaped_argfunction}}
0
$g {}
{w rwsh.argfunction {\ }; w rwsh.argfunction {rwsh.argfunction}; w rwsh.argfunction {rwsh.escaped_argfunction}}
{\ }
{rwsh.argfunction}
0
$
0
$# rwsh.excessive_nesting
0
$f g {h}
0
$f h {g}
0
$g
rwsh.excessive_nesting : command not found ( rwsh.excessive_nesting h g h g h g )
-1
$f rwsh.excessive_nesting {h}
0
$g
signal handler itself triggered signal
h g h g h rwsh.excessive_nesting
original call stack:
h g h g h g
0
$
0
$# rwsh.run_logic
0
$f rwsh.run_logic {%if %return $1; %else_if $*2; %else}
0
$0 e don't print
0
$1 e do print
do print
0
$1 f rwsh.run_logic
0
$1 e executable not found
1 : command not found ( 1 e executable not found )
-1
$
0
$# rwsh.vars
0
$rwsh.vars
CWD ERRNO FIGNORE IF_TEST0
$
0
$# %importenv_overwrite
0
$%set SHELL /bin/rwsh
0
$%printenv SHELL
/bin/rwsh
0
$%importenv_overwrite
0
$%printenv SHELL
/bin/bash
0
$
0
$# exiting rwsh.shutdown
0
$f rwsh.shutdown {e rwsh is now terminating}
0
$%exit
0
rwsh is now terminating
