rwsh v0.3 -
  * builtins: %append_to_errno, %for, %error_unit, %importenv_overwrite, 
      %importenv_preserve, %stepwise, %test_not_equal, %which_executable, 
      %which_test, %which_path, %which_return, %while, %var_add 
      %version_available, %version_compatible
  * evaluate soon: &x is the value of x at the start of the function,
      &&x is the value of x at the start of the outermost argfunction
  * command substitution z &{x y} - executes x y and makes its output an
      argument to z 
  * %source no longer runs internal functions other than rwsh.raw_command
  * ERRNO prevents execution of control flow builtins
  * reference variables - $$X prints the value of the variable named by X
  * fixed rwsh.mapped_argfunction {$*} crash

rwsh v0.2 - scripts
  * can source scripts
  * signal handling
  * builtins: cd, if, else_if, else_not_if, else, internal_features, 
      internal_errors, internal_vars, nop, return, source, test_equal, 
      test_not_empty, etc.
  * rwsh.init produces a usable environment
  * $0 is always the name of the current executable

rwsh v0.1 - proof of concept
  * can run binaries, builtins and functions (but not scripts).
  * variable map
  * builtins: autofunction, echo, exit, false, function, importenv, ls, newline,
      printenv, set, selection_set, true, which, version
  * selection read
  * internal functions: rwsh.init, rwsh.shutdown, rwsh.prompt, 
      rwsh.before_command, rwsh.after_command, rwsh.autofunction,
      rwsh.arguments_for_argfunction, rwsh.binary_not_found,
      rwsh.executable_not_found, rwsh.excessive_nesting, rwsh.mismatched_brace,
      rwsh.multiple_argfunctions, rwsh.selection_not_found
  * one possibly nested argfunction allowed per command. (argfunction levels of
      mapped through escaped.)
